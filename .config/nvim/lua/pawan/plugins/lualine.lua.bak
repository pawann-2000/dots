return {
  "nvim-lualine/lualine.nvim",
  dependencies = { "nvim-tree/nvim-web-devicons" },
  config = function()
    local lualine = require("lualine")
    local lazy_status = require("lazy.status") -- to configure lazy pending updates count

    local colors = {
      black        = '#282828',
      white        = '#ebdbb2',
      red          = '#fb4934',
      green        = '#b8bb26',
      blue         = '#83a598',
      yellow       = '#fe8019',
      gray         = '#a89984',
      darkgray     = '#3c3836',
      lightgray    = '#504945',
      inactivegray = '#7c6f64',
    }
    
     local gruvbox = {
      normal = {
        a = {bg = colors.gray, fg = colors.black, gui = 'bold'},
        b = {bg = colors.lightgray, fg = colors.white},
        c = {bg = colors.darkgray, fg = colors.gray}
      },
      insert = {
        a = {bg = colors.blue, fg = colors.black, gui = 'bold'},
        b = {bg = colors.lightgray, fg = colors.white},
        c = {bg = colors.lightgray, fg = colors.white}
      },
      visual = {
        a = {bg = colors.yellow, fg = colors.black, gui = 'bold'},
        b = {bg = colors.lightgray, fg = colors.white},
        c = {bg = colors.inactivegray, fg = colors.black}
      },
      replace = {
        a = {bg = colors.red, fg = colors.black, gui = 'bold'},
        b = {bg = colors.lightgray, fg = colors.white},
        c = {bg = colors.black, fg = colors.white}
      },
      command = {
        a = {bg = colors.green, fg = colors.black, gui = 'bold'},
        b = {bg = colors.lightgray, fg = colors.white},
        c = {bg = colors.inactivegray, fg = colors.black}
      },
      inactive = {
        a = {bg = colors.darkgray, fg = colors.gray, gui = 'bold'},
        b = {bg = colors.darkgray, fg = colors.gray},
        c = {bg = colors.darkgray, fg = colors.gray}
      }
    }

    -- configure lualine with modified theme
    lualine.setup({
      options = {
        theme = gruvbox,
      },
      sections = {
        lualine_x = {
          {
            lazy_status.updates,
            cond = lazy_status.has_updates,
          },
          { "encoding" },
          { "fileformat" },
          { "filetype" },
        },
      },
    })
  end,
}
